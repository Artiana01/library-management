openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22107
servers:
  - url: https://library.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          schema:
            type: string
        - in: query
          name: releaseDateStart  
          description: Filter books with release date greater than or equal to this date
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateEnd  
          description: Filter books with release date less than or equal to this date
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /authors:
    get:
      summary: Get all authors or filter by name
      description: Retrieve a list of authors or filter by name
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter authors by name
          schema:
            type: string
      responses:
        200:
          description: List of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    put:
      summary: Create or update authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: List of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    delete:
      summary: Delete authors
      operationId: deleteAuthors
      responses:
        200:
          description: Deletion successful

components:
  schemas:
    Book:
      allOf:
        - $ref: '#/components/schemas/CrupdateBook'
        - type: object
          properties:
            author:
              type: object
              nullable: true
              properties:
                id:
                  type: string
                name:
                  type: string
                sex:
                  type: string
                  enum:
                    - M
                    - F
    CrupdateBook:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
